/* Generated by Opal 0.10.3 */
Opal.modules["config"] = function(Opal) {
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module;

  return (function($base) {
    var $Config, self = $Config = $module($base, 'Config');

    var def = self.$$proto, $scope = self.$$scope;

    (function($base) {
      var $Cell, self = $Cell = $module($base, 'Cell');

      var def = self.$$proto, $scope = self.$$scope;

      Opal.cdecl($scope, 'Width', 69);

      Opal.cdecl($scope, 'Height', 69);

      Opal.cdecl($scope, 'StrokeColor', "#23e523");

      Opal.cdecl($scope, 'FillColor', "#459e24");
    })($scope.base);

    Opal.cdecl($scope, 'CanvasId', "theCanvas");
  })($scope.base)
};

/* Generated by Opal 0.10.3 */
Opal.modules["input"] = function(Opal) {
  function $rb_minus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);
  }
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module;

  Opal.add_stubs(['$-']);
  return (function($base) {
    var $Key, self = $Key = $module($base, 'Key');

    var def = self.$$proto, $scope = self.$$scope, TMP_1, TMP_2, TMP_3, TMP_4, TMP_5, TMP_6, TMP_7, TMP_8, TMP_9, TMP_10, TMP_11, TMP_12, TMP_13, TMP_14, TMP_15, TMP_16, TMP_17, TMP_18, TMP_19, TMP_20, TMP_21, TMP_22, TMP_23, TMP_24, TMP_25, TMP_26, TMP_27, TMP_28, TMP_29, TMP_30, TMP_31, TMP_32, TMP_33, TMP_34, TMP_35, TMP_36, TMP_37, TMP_38, TMP_39, TMP_40, TMP_41, TMP_42, TMP_43, TMP_44, TMP_45, TMP_46, TMP_47, TMP_48, TMP_49, TMP_50, TMP_51, TMP_52, TMP_53, TMP_54, TMP_55, TMP_56, TMP_57, TMP_58, TMP_59, TMP_60, TMP_61, TMP_62, TMP_63, TMP_64, TMP_65, TMP_66, TMP_67, TMP_68, TMP_69, TMP_70, TMP_71, TMP_72, TMP_73, TMP_74, TMP_75, TMP_76, TMP_77, TMP_78, TMP_79, TMP_80, TMP_81, TMP_82, TMP_83, TMP_84, TMP_85, TMP_86, TMP_87, TMP_88, TMP_89, TMP_90, TMP_91, TMP_92, TMP_93, TMP_94, TMP_95, TMP_96, TMP_97, TMP_98, TMP_99, TMP_100, TMP_101, TMP_102;

    self.SPACE = 32;

    self.BACKSPACE = 8;

    self.TAB = 9;

    self.ENTER = 13;

    self.SHIFT = 16;

    self.CTRL = 17;

    self.ALT = 18;

    self.PAUSE_BREAK = 19;

    self.CAPS_LOCK = 20;

    self.ESCAPE = 27;

    self.SPACE = 32;

    self.PAGE_UP = 33;

    self.PAGE_DOWN = 34;

    self.END = 35;

    self.HOME = 36;

    self.LEFT_ARROW = 37;

    self.UP_ARROW = 38;

    self.RIGHT_ARROW = 39;

    self.DOWN_ARROW = 40;

    self.INSERT = 45;

    self.DELETE = 46;

    self.ZERO = 48;

    self.ONE = 49;

    self.TWO = 50;

    self.THREE = 51;

    self.FOUR = 52;

    self.FIVE = 53;

    self.SIX = 54;

    self.SEVEN = 55;

    self.EIGHT = 56;

    self.NINE = 57;

    self.A = 65;

    self.B = 66;

    self.C = 67;

    self.D = 68;

    self.E = 69;

    self.F = 70;

    self.G = 71;

    self.H = 72;

    self.I = 73;

    self.J = 74;

    self.K = 75;

    self.L = 76;

    self.M = 77;

    self.N = 78;

    self.O = 79;

    self.P = 80;

    self.Q = 81;

    self.R = 82;

    self.S = 83;

    self.T = 84;

    self.U = 85;

    self.V = 86;

    self.W = 87;

    self.X = 88;

    self.Y = 89;

    self.Z = 90;

    self.LEFT_WINDOW_KEY = 91;

    self.RIGHT_WINDOW_KEY = 92;

    self.SELECT_KEY = 93;

    self.NUMPAD_0 = 96;

    self.NUMPAD_1 = 97;

    self.NUMPAD_2 = 98;

    self.NUMPAD_3 = 99;

    self.NUMPAD_4 = 100;

    self.NUMPAD_5 = 101;

    self.NUMPAD_6 = 102;

    self.NUMPAD_7 = 103;

    self.NUMPAD_8 = 104;

    self.NUMPAD_9 = 105;

    self.MULTIPLY = 106;

    self.ADD = 107;

    self.SUBTRACT = 109;

    self.DECIMAL_POINT = 110;

    self.DIVIDE = 111;

    self.F1 = 112;

    self.F2 = 113;

    self.F3 = 114;

    self.F4 = 115;

    self.F5 = 116;

    self.F6 = 117;

    self.F7 = 118;

    self.F8 = 119;

    self.F9 = 120;

    self.F10 = 121;

    self.F11 = 122;

    self.F12 = 123;

    self.NUM_LOCK = 144;

    self.SCROLL_LOCK = 145;

    self.SEMI_COLON = 186;

    self.EQUAL_SIGN = 187;

    self.COMMA = 188;

    self.DASH = 189;

    self.PERIOD = 190;

    self.FORWARD_SLASH = 191;

    self.GRAVE_ACCENT = 192;

    self.OPEN_BRACKET = 219;

    self.BACK_SLASH = 220;

    self.CLOSE_BRAKET = 221;

    self.SINGLE_QUOTE = 222;

    Opal.defs(self, '$KEY', TMP_1 = function $$KEY() {
      var self = this;
      if (self.KEY == null) self.KEY = nil;

      return self.KEY;
    }, TMP_1.$$arity = 0);

    Opal.defs(self, '$BACKSPACE', TMP_2 = function $$BACKSPACE() {
      var self = this;
      if (self.BACKSPACE == null) self.BACKSPACE = nil;

      return self.BACKSPACE;
    }, TMP_2.$$arity = 0);

    Opal.defs(self, '$TAB', TMP_3 = function $$TAB() {
      var self = this;
      if (self.TAB == null) self.TAB = nil;

      return self.TAB;
    }, TMP_3.$$arity = 0);

    Opal.defs(self, '$ENTER', TMP_4 = function $$ENTER() {
      var self = this;
      if (self.ENTER == null) self.ENTER = nil;

      return self.ENTER;
    }, TMP_4.$$arity = 0);

    Opal.defs(self, '$SHIFT', TMP_5 = function $$SHIFT() {
      var self = this;
      if (self.SHIFT == null) self.SHIFT = nil;

      return self.SHIFT;
    }, TMP_5.$$arity = 0);

    Opal.defs(self, '$CTRL', TMP_6 = function $$CTRL() {
      var self = this;
      if (self.CTRL == null) self.CTRL = nil;

      return self.CTRL;
    }, TMP_6.$$arity = 0);

    Opal.defs(self, '$ALT', TMP_7 = function $$ALT() {
      var self = this;
      if (self.ALT == null) self.ALT = nil;

      return self.ALT;
    }, TMP_7.$$arity = 0);

    Opal.defs(self, '$PAUSE_BREAK', TMP_8 = function $$PAUSE_BREAK() {
      var self = this;
      if (self.PAUSE_BREAK == null) self.PAUSE_BREAK = nil;

      return self.PAUSE_BREAK;
    }, TMP_8.$$arity = 0);

    Opal.defs(self, '$CAPS_LOCK', TMP_9 = function $$CAPS_LOCK() {
      var self = this;
      if (self.CAPS_LOCK == null) self.CAPS_LOCK = nil;

      return self.CAPS_LOCK;
    }, TMP_9.$$arity = 0);

    Opal.defs(self, '$ESCAPE', TMP_10 = function $$ESCAPE() {
      var self = this;
      if (self.ESCAPE == null) self.ESCAPE = nil;

      return self.ESCAPE;
    }, TMP_10.$$arity = 0);

    Opal.defs(self, '$SPACE', TMP_11 = function $$SPACE() {
      var self = this;
      if (self.SPACE == null) self.SPACE = nil;

      return self.SPACE;
    }, TMP_11.$$arity = 0);

    Opal.defs(self, '$PAGE_UP', TMP_12 = function $$PAGE_UP() {
      var self = this;
      if (self.PAGE_UP == null) self.PAGE_UP = nil;

      return self.PAGE_UP;
    }, TMP_12.$$arity = 0);

    Opal.defs(self, '$PAGE_DOWN', TMP_13 = function $$PAGE_DOWN() {
      var self = this;
      if (self.PAGE_DOWN == null) self.PAGE_DOWN = nil;

      return self.PAGE_DOWN;
    }, TMP_13.$$arity = 0);

    Opal.defs(self, '$END', TMP_14 = function $$END() {
      var self = this;
      if (self.END == null) self.END = nil;

      return self.END;
    }, TMP_14.$$arity = 0);

    Opal.defs(self, '$HOME', TMP_15 = function $$HOME() {
      var self = this;
      if (self.HOME == null) self.HOME = nil;

      return self.HOME;
    }, TMP_15.$$arity = 0);

    Opal.defs(self, '$LEFT_ARROW', TMP_16 = function $$LEFT_ARROW() {
      var self = this;
      if (self.LEFT_ARROW == null) self.LEFT_ARROW = nil;

      return self.LEFT_ARROW;
    }, TMP_16.$$arity = 0);

    Opal.defs(self, '$UP_ARROW', TMP_17 = function $$UP_ARROW() {
      var self = this;
      if (self.UP_ARROW == null) self.UP_ARROW = nil;

      return self.UP_ARROW;
    }, TMP_17.$$arity = 0);

    Opal.defs(self, '$RIGHT_ARROW', TMP_18 = function $$RIGHT_ARROW() {
      var self = this;
      if (self.RIGHT_ARROW == null) self.RIGHT_ARROW = nil;

      return self.RIGHT_ARROW;
    }, TMP_18.$$arity = 0);

    Opal.defs(self, '$DOWN_ARROW', TMP_19 = function $$DOWN_ARROW() {
      var self = this;
      if (self.DOWN_ARROW == null) self.DOWN_ARROW = nil;

      return self.DOWN_ARROW;
    }, TMP_19.$$arity = 0);

    Opal.defs(self, '$INSERT', TMP_20 = function $$INSERT() {
      var self = this;
      if (self.INSERT == null) self.INSERT = nil;

      return self.INSERT;
    }, TMP_20.$$arity = 0);

    Opal.defs(self, '$DELETE', TMP_21 = function $$DELETE() {
      var self = this;
      if (self.DELETE == null) self.DELETE = nil;

      return self.DELETE;
    }, TMP_21.$$arity = 0);

    Opal.defs(self, '$ZERO', TMP_22 = function $$ZERO() {
      var self = this;
      if (self.ZERO == null) self.ZERO = nil;

      return self.ZERO;
    }, TMP_22.$$arity = 0);

    Opal.defs(self, '$ONE', TMP_23 = function $$ONE() {
      var self = this;
      if (self.ONE == null) self.ONE = nil;

      return self.ONE;
    }, TMP_23.$$arity = 0);

    Opal.defs(self, '$TWO', TMP_24 = function $$TWO() {
      var self = this;
      if (self.TWO == null) self.TWO = nil;

      return self.TWO;
    }, TMP_24.$$arity = 0);

    Opal.defs(self, '$THREE', TMP_25 = function $$THREE() {
      var self = this;
      if (self.THREE == null) self.THREE = nil;

      return self.THREE;
    }, TMP_25.$$arity = 0);

    Opal.defs(self, '$FOUR', TMP_26 = function $$FOUR() {
      var self = this;
      if (self.FOUR == null) self.FOUR = nil;

      return self.FOUR;
    }, TMP_26.$$arity = 0);

    Opal.defs(self, '$FIVE', TMP_27 = function $$FIVE() {
      var self = this;
      if (self.FIVE == null) self.FIVE = nil;

      return self.FIVE;
    }, TMP_27.$$arity = 0);

    Opal.defs(self, '$SIX', TMP_28 = function $$SIX() {
      var self = this;
      if (self.SIX == null) self.SIX = nil;

      return self.SIX;
    }, TMP_28.$$arity = 0);

    Opal.defs(self, '$SEVEN', TMP_29 = function $$SEVEN() {
      var self = this;
      if (self.SEVEN == null) self.SEVEN = nil;

      return self.SEVEN;
    }, TMP_29.$$arity = 0);

    Opal.defs(self, '$EIGHT', TMP_30 = function $$EIGHT() {
      var self = this;
      if (self.EIGHT == null) self.EIGHT = nil;

      return self.EIGHT;
    }, TMP_30.$$arity = 0);

    Opal.defs(self, '$NINE', TMP_31 = function $$NINE() {
      var self = this;
      if (self.NINE == null) self.NINE = nil;

      return self.NINE;
    }, TMP_31.$$arity = 0);

    Opal.defs(self, '$A', TMP_32 = function $$A() {
      var self = this;
      if (self.A == null) self.A = nil;

      return self.A;
    }, TMP_32.$$arity = 0);

    Opal.defs(self, '$B', TMP_33 = function $$B() {
      var self = this;
      if (self.B == null) self.B = nil;

      return self.B;
    }, TMP_33.$$arity = 0);

    Opal.defs(self, '$C', TMP_34 = function $$C() {
      var self = this;
      if (self.C == null) self.C = nil;

      return self.C;
    }, TMP_34.$$arity = 0);

    Opal.defs(self, '$D', TMP_35 = function $$D() {
      var self = this;
      if (self.D == null) self.D = nil;

      return self.D;
    }, TMP_35.$$arity = 0);

    Opal.defs(self, '$KEY', TMP_36 = function $$KEY() {
      var self = this;
      if (self.KEY == null) self.KEY = nil;

      return self.KEY;
    }, TMP_36.$$arity = 0);

    Opal.defs(self, '$E', TMP_37 = function $$E() {
      var self = this;
      if (self.E == null) self.E = nil;

      return self.E;
    }, TMP_37.$$arity = 0);

    Opal.defs(self, '$F', TMP_38 = function $$F() {
      var self = this;
      if (self.F == null) self.F = nil;

      return self.F;
    }, TMP_38.$$arity = 0);

    Opal.defs(self, '$G', TMP_39 = function $$G() {
      var self = this;
      if (self.G == null) self.G = nil;

      return self.G;
    }, TMP_39.$$arity = 0);

    Opal.defs(self, '$H', TMP_40 = function $$H() {
      var self = this;
      if (self.H == null) self.H = nil;

      return self.H;
    }, TMP_40.$$arity = 0);

    Opal.defs(self, '$I', TMP_41 = function $$I() {
      var self = this;
      if (self.I == null) self.I = nil;

      return self.I;
    }, TMP_41.$$arity = 0);

    Opal.defs(self, '$J', TMP_42 = function $$J() {
      var self = this;
      if (self.J == null) self.J = nil;

      return self.J;
    }, TMP_42.$$arity = 0);

    Opal.defs(self, '$K', TMP_43 = function $$K() {
      var self = this;
      if (self.K == null) self.K = nil;

      return self.K;
    }, TMP_43.$$arity = 0);

    Opal.defs(self, '$L', TMP_44 = function $$L() {
      var self = this;
      if (self.L == null) self.L = nil;

      return self.L;
    }, TMP_44.$$arity = 0);

    Opal.defs(self, '$M', TMP_45 = function $$M() {
      var self = this;
      if (self.M == null) self.M = nil;

      return self.M;
    }, TMP_45.$$arity = 0);

    Opal.defs(self, '$N', TMP_46 = function $$N() {
      var self = this;
      if (self.N == null) self.N = nil;

      return self.N;
    }, TMP_46.$$arity = 0);

    Opal.defs(self, '$O', TMP_47 = function $$O() {
      var self = this;
      if (self.O == null) self.O = nil;

      return self.O;
    }, TMP_47.$$arity = 0);

    Opal.defs(self, '$P', TMP_48 = function $$P() {
      var self = this;
      if (self.P == null) self.P = nil;

      return self.P;
    }, TMP_48.$$arity = 0);

    Opal.defs(self, '$Q', TMP_49 = function $$Q() {
      var self = this;
      if (self.Q == null) self.Q = nil;

      return self.Q;
    }, TMP_49.$$arity = 0);

    Opal.defs(self, '$R', TMP_50 = function $$R() {
      var self = this;
      if (self.R == null) self.R = nil;

      return self.R;
    }, TMP_50.$$arity = 0);

    Opal.defs(self, '$S', TMP_51 = function $$S() {
      var self = this;
      if (self.S == null) self.S = nil;

      return self.S;
    }, TMP_51.$$arity = 0);

    Opal.defs(self, '$T', TMP_52 = function $$T() {
      var self = this;
      if (self.T == null) self.T = nil;

      return self.T;
    }, TMP_52.$$arity = 0);

    Opal.defs(self, '$U', TMP_53 = function $$U() {
      var self = this;
      if (self.U == null) self.U = nil;

      return self.U;
    }, TMP_53.$$arity = 0);

    Opal.defs(self, '$V', TMP_54 = function $$V() {
      var self = this;
      if (self.V == null) self.V = nil;

      return self.V;
    }, TMP_54.$$arity = 0);

    Opal.defs(self, '$W', TMP_55 = function $$W() {
      var self = this;
      if (self.W == null) self.W = nil;

      return self.W;
    }, TMP_55.$$arity = 0);

    Opal.defs(self, '$X', TMP_56 = function $$X() {
      var self = this;
      if (self.X == null) self.X = nil;

      return self.X;
    }, TMP_56.$$arity = 0);

    Opal.defs(self, '$Y', TMP_57 = function $$Y() {
      var self = this;
      if (self.Y == null) self.Y = nil;

      return self.Y;
    }, TMP_57.$$arity = 0);

    Opal.defs(self, '$Z', TMP_58 = function $$Z() {
      var self = this;
      if (self.Z == null) self.Z = nil;

      return self.Z;
    }, TMP_58.$$arity = 0);

    Opal.defs(self, '$LEFT_WINDOW_KEY', TMP_59 = function $$LEFT_WINDOW_KEY() {
      var self = this;
      if (self.LEFT_WINDOW_KEY == null) self.LEFT_WINDOW_KEY = nil;

      return self.LEFT_WINDOW_KEY;
    }, TMP_59.$$arity = 0);

    Opal.defs(self, '$RIGHT_WINDOW_KEY', TMP_60 = function $$RIGHT_WINDOW_KEY() {
      var self = this;
      if (self.RIGHT_WINDOW_KEY == null) self.RIGHT_WINDOW_KEY = nil;

      return self.RIGHT_WINDOW_KEY;
    }, TMP_60.$$arity = 0);

    Opal.defs(self, '$SELECT_KEY', TMP_61 = function $$SELECT_KEY() {
      var self = this;
      if (self.SELECT_KEY == null) self.SELECT_KEY = nil;

      return self.SELECT_KEY;
    }, TMP_61.$$arity = 0);

    Opal.defs(self, '$NUMPAD_0', TMP_62 = function $$NUMPAD_0() {
      var self = this;
      if (self.NUMPAD_0 == null) self.NUMPAD_0 = nil;

      return self.NUMPAD_0;
    }, TMP_62.$$arity = 0);

    Opal.defs(self, '$NUMPAD_1', TMP_63 = function $$NUMPAD_1() {
      var self = this;
      if (self.NUMPAD_1 == null) self.NUMPAD_1 = nil;

      return self.NUMPAD_1;
    }, TMP_63.$$arity = 0);

    Opal.defs(self, '$NUMPAD_2', TMP_64 = function $$NUMPAD_2() {
      var self = this;
      if (self.NUMPAD_2 == null) self.NUMPAD_2 = nil;

      return self.NUMPAD_2;
    }, TMP_64.$$arity = 0);

    Opal.defs(self, '$NUMPAD_3', TMP_65 = function $$NUMPAD_3() {
      var self = this;
      if (self.NUMPAD_3 == null) self.NUMPAD_3 = nil;

      return self.NUMPAD_3;
    }, TMP_65.$$arity = 0);

    Opal.defs(self, '$NUMPAD_4', TMP_66 = function $$NUMPAD_4() {
      var self = this;
      if (self.NUMPAD_4 == null) self.NUMPAD_4 = nil;

      return self.NUMPAD_4;
    }, TMP_66.$$arity = 0);

    Opal.defs(self, '$NUMPAD_5', TMP_67 = function $$NUMPAD_5() {
      var self = this;
      if (self.NUMPAD_5 == null) self.NUMPAD_5 = nil;

      return self.NUMPAD_5;
    }, TMP_67.$$arity = 0);

    Opal.defs(self, '$NUMPAD_6', TMP_68 = function $$NUMPAD_6() {
      var self = this;
      if (self.NUMPAD_6 == null) self.NUMPAD_6 = nil;

      return self.NUMPAD_6;
    }, TMP_68.$$arity = 0);

    Opal.defs(self, '$NUMPAD_7', TMP_69 = function $$NUMPAD_7() {
      var self = this;
      if (self.NUMPAD_7 == null) self.NUMPAD_7 = nil;

      return self.NUMPAD_7;
    }, TMP_69.$$arity = 0);

    Opal.defs(self, '$KEY', TMP_70 = function $$KEY() {
      var self = this;
      if (self.KEY == null) self.KEY = nil;

      return self.KEY;
    }, TMP_70.$$arity = 0);

    Opal.defs(self, '$NUMPAD_8', TMP_71 = function $$NUMPAD_8() {
      var self = this;
      if (self.NUMPAD_8 == null) self.NUMPAD_8 = nil;

      return self.NUMPAD_8;
    }, TMP_71.$$arity = 0);

    Opal.defs(self, '$NUMPAD_9', TMP_72 = function $$NUMPAD_9() {
      var self = this;
      if (self.NUMPAD_9 == null) self.NUMPAD_9 = nil;

      return self.NUMPAD_9;
    }, TMP_72.$$arity = 0);

    Opal.defs(self, '$MULTIPLY', TMP_73 = function $$MULTIPLY() {
      var self = this;
      if (self.MULTIPLY == null) self.MULTIPLY = nil;

      return self.MULTIPLY;
    }, TMP_73.$$arity = 0);

    Opal.defs(self, '$ADD', TMP_74 = function $$ADD() {
      var self = this;
      if (self.ADD == null) self.ADD = nil;

      return self.ADD;
    }, TMP_74.$$arity = 0);

    Opal.defs(self, '$SUBTRACT', TMP_75 = function $$SUBTRACT() {
      var self = this;
      if (self.SUBTRACT == null) self.SUBTRACT = nil;

      return self.SUBTRACT;
    }, TMP_75.$$arity = 0);

    Opal.defs(self, '$DECIMAL_POINT', TMP_76 = function $$DECIMAL_POINT() {
      var self = this;
      if (self.DECIMAL_POINT == null) self.DECIMAL_POINT = nil;

      return self.DECIMAL_POINT;
    }, TMP_76.$$arity = 0);

    Opal.defs(self, '$DIVIDE', TMP_77 = function $$DIVIDE() {
      var self = this;
      if (self.DIVIDE == null) self.DIVIDE = nil;

      return self.DIVIDE;
    }, TMP_77.$$arity = 0);

    Opal.defs(self, '$F1', TMP_78 = function $$F1() {
      var self = this;
      if (self.F1 == null) self.F1 = nil;

      return self.F1;
    }, TMP_78.$$arity = 0);

    Opal.defs(self, '$F2', TMP_79 = function $$F2() {
      var self = this;
      if (self.F2 == null) self.F2 = nil;

      return self.F2;
    }, TMP_79.$$arity = 0);

    Opal.defs(self, '$F3', TMP_80 = function $$F3() {
      var self = this;
      if (self.F3 == null) self.F3 = nil;

      return self.F3;
    }, TMP_80.$$arity = 0);

    Opal.defs(self, '$F4', TMP_81 = function $$F4() {
      var self = this;
      if (self.F4 == null) self.F4 = nil;

      return self.F4;
    }, TMP_81.$$arity = 0);

    Opal.defs(self, '$F5', TMP_82 = function $$F5() {
      var self = this;
      if (self.F5 == null) self.F5 = nil;

      return self.F5;
    }, TMP_82.$$arity = 0);

    Opal.defs(self, '$F6', TMP_83 = function $$F6() {
      var self = this;
      if (self.F6 == null) self.F6 = nil;

      return self.F6;
    }, TMP_83.$$arity = 0);

    Opal.defs(self, '$F7', TMP_84 = function $$F7() {
      var self = this;
      if (self.F7 == null) self.F7 = nil;

      return self.F7;
    }, TMP_84.$$arity = 0);

    Opal.defs(self, '$F8', TMP_85 = function $$F8() {
      var self = this;
      if (self.F8 == null) self.F8 = nil;

      return self.F8;
    }, TMP_85.$$arity = 0);

    Opal.defs(self, '$F9', TMP_86 = function $$F9() {
      var self = this;
      if (self.F9 == null) self.F9 = nil;

      return self.F9;
    }, TMP_86.$$arity = 0);

    Opal.defs(self, '$F10', TMP_87 = function $$F10() {
      var self = this;
      if (self.F10 == null) self.F10 = nil;

      return self.F10;
    }, TMP_87.$$arity = 0);

    Opal.defs(self, '$F11', TMP_88 = function $$F11() {
      var self = this;
      if (self.F11 == null) self.F11 = nil;

      return self.F11;
    }, TMP_88.$$arity = 0);

    Opal.defs(self, '$F12', TMP_89 = function $$F12() {
      var self = this;
      if (self.F12 == null) self.F12 = nil;

      return self.F12;
    }, TMP_89.$$arity = 0);

    Opal.defs(self, '$NUM_LOCK', TMP_90 = function $$NUM_LOCK() {
      var self = this;
      if (self.NUM_LOCK == null) self.NUM_LOCK = nil;

      return self.NUM_LOCK;
    }, TMP_90.$$arity = 0);

    Opal.defs(self, '$SCROLL_LOCK', TMP_91 = function $$SCROLL_LOCK() {
      var self = this;
      if (self.SCROLL_LOCK == null) self.SCROLL_LOCK = nil;

      return self.SCROLL_LOCK;
    }, TMP_91.$$arity = 0);

    Opal.defs(self, '$SEMI_COLON', TMP_92 = function $$SEMI_COLON() {
      var self = this;
      if (self.SEMI == null) self.SEMI = nil;

      return $rb_minus(self.SEMI, $scope.get('COLON'));
    }, TMP_92.$$arity = 0);

    Opal.defs(self, '$EQUAL_SIGN', TMP_93 = function $$EQUAL_SIGN() {
      var self = this;
      if (self.EQUAL_SIGN == null) self.EQUAL_SIGN = nil;

      return self.EQUAL_SIGN;
    }, TMP_93.$$arity = 0);

    Opal.defs(self, '$COMMA', TMP_94 = function $$COMMA() {
      var self = this;
      if (self.COMMA == null) self.COMMA = nil;

      return self.COMMA;
    }, TMP_94.$$arity = 0);

    Opal.defs(self, '$DASH', TMP_95 = function $$DASH() {
      var self = this;
      if (self.DASH == null) self.DASH = nil;

      return self.DASH;
    }, TMP_95.$$arity = 0);

    Opal.defs(self, '$PERIOD', TMP_96 = function $$PERIOD() {
      var self = this;
      if (self.PERIOD == null) self.PERIOD = nil;

      return self.PERIOD;
    }, TMP_96.$$arity = 0);

    Opal.defs(self, '$FORWARD_SLASH', TMP_97 = function $$FORWARD_SLASH() {
      var self = this;
      if (self.FORWARD_SLASH == null) self.FORWARD_SLASH = nil;

      return self.FORWARD_SLASH;
    }, TMP_97.$$arity = 0);

    Opal.defs(self, '$GRAVE_ACCENT', TMP_98 = function $$GRAVE_ACCENT() {
      var self = this;
      if (self.GRAVE_ACCENT == null) self.GRAVE_ACCENT = nil;

      return self.GRAVE_ACCENT;
    }, TMP_98.$$arity = 0);

    Opal.defs(self, '$OPEN_BRACKET', TMP_99 = function $$OPEN_BRACKET() {
      var self = this;
      if (self.OPEN_BRACKET == null) self.OPEN_BRACKET = nil;

      return self.OPEN_BRACKET;
    }, TMP_99.$$arity = 0);

    Opal.defs(self, '$BACK_SLASH', TMP_100 = function $$BACK_SLASH() {
      var self = this;
      if (self.BACK_SLASH == null) self.BACK_SLASH = nil;

      return self.BACK_SLASH;
    }, TMP_100.$$arity = 0);

    Opal.defs(self, '$CLOSE_BRAKET', TMP_101 = function $$CLOSE_BRAKET() {
      var self = this;
      if (self.CLOSE_BRAKET == null) self.CLOSE_BRAKET = nil;

      return self.CLOSE_BRAKET;
    }, TMP_101.$$arity = 0);

    Opal.defs(self, '$SINGLE_QUOTE', TMP_102 = function $$SINGLE_QUOTE() {
      var self = this;
      if (self.SINGLE_QUOTE == null) self.SINGLE_QUOTE = nil;

      return self.SINGLE_QUOTE;
    }, TMP_102.$$arity = 0);
  })($scope.base)
};

/* Generated by Opal 0.10.3 */
Opal.modules["canvas"] = function(Opal) {
  function $rb_plus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);
  }
  function $rb_minus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);
  }
  var TMP_27, self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass;

  Opal.add_stubs(['$require', '$attr_reader', '$find', '$+', '$new', '$attr', '$on', '$get', '$key_code', '$key_event', '$to_proc', '$-', '$page_x', '$target', '$page_y', '$mouse_event', '$set_color', '$draw_circle', '$fill_rectangle', '$width', '$height']);
  self.$require("config");
  self.$require("input");
  (function($base, $super) {
    function $Canvas(){};
    var self = $Canvas = $klass($base, $super, 'Canvas', $Canvas);

    var def = self.$$proto, $scope = self.$$scope, TMP_1, TMP_2, TMP_4, TMP_6, TMP_7, TMP_8, TMP_10, TMP_11, TMP_12, TMP_13, TMP_14, TMP_15, TMP_16, TMP_17, TMP_18, TMP_19, TMP_20, TMP_21, TMP_22, TMP_23, TMP_24, TMP_25, TMP_26;

    def.buffer = def.canvas = def.buffer_context = def.context = def.num_images = def.canvas_element = def.target_context = nil;
    self.$attr_reader("canvas", "context", "width", "height");

    Opal.defn(self, '$initialize', TMP_1 = function $$initialize(canvas_id, double_buffering) {
      var self = this;

      if (double_buffering == null) {
        double_buffering = false;
      }
      self.double_buffering = double_buffering;
      self.canvas_element = $scope.get('Element').$find($rb_plus("#", canvas_id));
      self.canvas = document.getElementById(canvas_id);
      self.buffer = document.createElement('canvas');
      self.buffer.width = self.canvas.width;
      self.buffer.height = self.canvas.height;
      self.buffer_context = self.buffer.getContext("2d");
      self.context = self.canvas.getContext("2d");
      self.target_context = (function() {if (double_buffering !== false && double_buffering !== nil && double_buffering != null) {
        return self.buffer_context
        } else {
        return self.context
      }; return nil; })();
      self.width = self.canvas.width;
      self.height = self.canvas.height;
      self.canvas.focus();
      self.num_images = 0;
      return self.num_loaded_images = 0;
    }, TMP_1.$$arity = -2);

    Opal.defs(self, '$init', TMP_2 = function $$init() {
      var self = this;

      return $scope.get('Canvas').$new((($scope.get('Config')).$$scope.get('CanvasId')));
    }, TMP_2.$$arity = 0);

    Opal.defn(self, '$load_image', TMP_4 = function $$load_image(file_name) {
      var $a, $b, TMP_3, self = this, image = nil;

      self.num_images = $rb_plus(self.num_images, 1);
      image = $scope.get('Element').$new("img");
      image.$attr("src", "img/foo.png");
      ($a = ($b = image).$on, $a.$$p = (TMP_3 = function(){var self = TMP_3.$$s || this;
        if (self.num_loaded_images == null) self.num_loaded_images = nil;
        if (self.context == null) self.context = nil;

      self.num_loaded_images = $rb_plus(self.num_loaded_images, 1);
        return self.context.drawImage(image.$get(0), 0,0);}, TMP_3.$$s = self, TMP_3.$$arity = 0, TMP_3), $a).call($b, "load");
      return image;
    }, TMP_4.$$arity = 1);

    Opal.defn(self, '$key_event', TMP_6 = function $$key_event(event_type) {
      var $a, $b, TMP_5, self = this, $iter = TMP_6.$$p, $yield = $iter || nil;

      TMP_6.$$p = null;
      return ($a = ($b = $scope.get('Document')).$on, $a.$$p = (TMP_5 = function(event){var self = TMP_5.$$s || this;
if (event == null) event = nil;
      return Opal.yield1($yield, event.$key_code());}, TMP_5.$$s = self, TMP_5.$$arity = 1, TMP_5), $a).call($b, event_type);
    }, TMP_6.$$arity = 1);

    Opal.defn(self, '$key_down', TMP_7 = function $$key_down() {
      var $a, $b, self = this, $iter = TMP_7.$$p, block = $iter || nil;

      TMP_7.$$p = null;
      return ($a = ($b = self).$key_event, $a.$$p = block.$to_proc(), $a).call($b, "keydown");
    }, TMP_7.$$arity = 0);

    Opal.defn(self, '$key_up', TMP_8 = function $$key_up() {
      var $a, $b, self = this, $iter = TMP_8.$$p, block = $iter || nil;

      TMP_8.$$p = null;
      return ($a = ($b = self).$key_event, $a.$$p = block.$to_proc(), $a).call($b, "keyup");
    }, TMP_8.$$arity = 0);

    Opal.defn(self, '$mouse_event', TMP_10 = function $$mouse_event(event_type) {
      var $a, $b, TMP_9, self = this, $iter = TMP_10.$$p, $yield = $iter || nil;

      TMP_10.$$p = null;
      return ($a = ($b = self.canvas_element).$on, $a.$$p = (TMP_9 = function(event){var self = TMP_9.$$s || this, mouse_x = nil, mouse_y = nil;
if (event == null) event = nil;
      mouse_x = $rb_minus(event.$page_x(), event.$target()[0].offsetLeft);
        mouse_y = $rb_minus(event.$page_y(), event.$target()[0].offsetTop);
        return Opal.yieldX($yield, [mouse_x, mouse_y]);;}, TMP_9.$$s = self, TMP_9.$$arity = 1, TMP_9), $a).call($b, event_type);
    }, TMP_10.$$arity = 1);

    Opal.defn(self, '$mouse_down', TMP_11 = function $$mouse_down() {
      var $a, $b, self = this, $iter = TMP_11.$$p, block = $iter || nil;

      TMP_11.$$p = null;
      return ($a = ($b = self).$mouse_event, $a.$$p = block.$to_proc(), $a).call($b, "mousedown");
    }, TMP_11.$$arity = 0);

    Opal.defn(self, '$mouse_up', TMP_12 = function $$mouse_up() {
      var $a, $b, self = this, $iter = TMP_12.$$p, block = $iter || nil;

      TMP_12.$$p = null;
      return ($a = ($b = self).$mouse_event, $a.$$p = block.$to_proc(), $a).call($b, "mouseup");
    }, TMP_12.$$arity = 0);

    Opal.defn(self, '$mouse_click', TMP_13 = function $$mouse_click() {
      var $a, $b, self = this, $iter = TMP_13.$$p, block = $iter || nil;

      TMP_13.$$p = null;
      return ($a = ($b = self).$mouse_event, $a.$$p = block.$to_proc(), $a).call($b, "click");
    }, TMP_13.$$arity = 0);

    Opal.defn(self, '$mouse_move', TMP_14 = function $$mouse_move() {
      var $a, $b, self = this, $iter = TMP_14.$$p, block = $iter || nil;

      TMP_14.$$p = null;
      return ($a = ($b = self).$mouse_event, $a.$$p = block.$to_proc(), $a).call($b, "mousemove");
    }, TMP_14.$$arity = 0);

    Opal.defn(self, '$set_color', TMP_15 = function $$set_color(color) {
      var self = this;

      return self.target_context.fillStyle=color;
    }, TMP_15.$$arity = 1);

    Opal.defn(self, '$fill_rectangle', TMP_16 = function $$fill_rectangle(start_x, start_y, width, height, color) {
      var self = this;

      self.$set_color(color);
      return self.target_context.fillRect(start_x,start_y,width,height);
    }, TMP_16.$$arity = 5);

    Opal.defn(self, '$draw_rectangle', TMP_17 = function $$draw_rectangle(start_x, start_y, width, height, color) {
      var self = this, end_x = nil, end_y = nil;

      self.target_context.strokeStyle = color;
      end_x = $rb_plus(start_x, width);
      end_y = $rb_plus(start_y, height);
      self.target_context.beginPath();
      self.target_context.moveTo(start_x,start_y);
      self.target_context.lineTo(end_x,start_y);
      self.target_context.lineTo(end_x,end_y);
      self.target_context.lineTo(start_x,end_y);
      self.target_context.lineTo(start_x,start_y);
      return self.target_context.stroke();
    }, TMP_17.$$arity = 5);

    Opal.defn(self, '$fill_circle', TMP_18 = function $$fill_circle(origin_x, origin_y, radius, color) {
      var self = this;

      self.$set_color(color);
      self.$draw_circle(origin_x, origin_y, radius, color);
      return self.target_context.fill();
    }, TMP_18.$$arity = 4);

    Opal.defn(self, '$draw_circle', TMP_19 = function $$draw_circle(origin_x, origin_y, radius, color) {
      var self = this;

      self.target_context.strokeStyle = color;
      self.target_context.beginPath();
      self.target_context.arc(origin_x,origin_y,radius,0,Math.PI*2);
      self.target_context.closePath();
      return self.target_context.stroke();
    }, TMP_19.$$arity = 4);

    Opal.defn(self, '$draw_image', TMP_20 = function $$draw_image(image) {
      var self = this;

      return self.target_context.drawImage(image.$get(0), 0,0);
    }, TMP_20.$$arity = 1);

    Opal.defn(self, '$draw_line', TMP_21 = function $$draw_line(start_x, start_y, end_x, end_y, color) {
      var self = this;

      self.target_context.strokeStyle = color;
      self.target_context.beginPath();
      self.target_context.moveTo(start_x,start_y);
      self.target_context.lineTo(end_x,end_y);
      return self.target_context.stroke();
    }, TMP_21.$$arity = 5);

    Opal.defn(self, '$draw_text', TMP_22 = function $$draw_text(text, x, y, color, size, font) {
      var self = this;

      if (color == null) {
        color = "white";
      }
      if (size == null) {
        size = "20px";
      }
      if (font == null) {
        font = "Arial";
      }
      self.$set_color(color);
      self.target_context.font = "size font";
      return self.target_context.fillText(text,x,y);
    }, TMP_22.$$arity = -4);

    Opal.defn(self, '$set_pixel', TMP_23 = function $$set_pixel(x, y, color) {
      var self = this;

      return self.$fill_rectangle(x, y, 1, 1, color);
    }, TMP_23.$$arity = 3);

    Opal.defn(self, '$clear', TMP_24 = function $$clear() {
      var self = this;

      return self.$fill_rectangle(0, 0, self.$width(), self.$height(), "black");
    }, TMP_24.$$arity = 0);

    Opal.defn(self, '$render', TMP_25 = function $$render() {
      var self = this;

      return self.target_context.drawImage(self.buffer, 0,0);
    }, TMP_25.$$arity = 0);

    return (Opal.defn(self, '$loop', TMP_26 = function $$loop(interval) {
      var self = this, $iter = TMP_26.$$p, $yield = $iter || nil;

      TMP_26.$$p = null;
      return setInterval(function() {Opal.yieldX($yield, [])}, interval);
    }, TMP_26.$$arity = 1), nil) && 'loop';
  })($scope.base, null);
  return (Opal.defn(Opal.Object, '$log', TMP_27 = function $$log(message) {
    var self = this;

    return console.log(message);
  }, TMP_27.$$arity = 1), nil) && 'log';
};

/* Generated by Opal 0.10.3 */
(function(Opal) {
  var $a, $b, TMP_1, self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, window = nil;

  Opal.add_stubs(['$require', '$init', '$mouse_move', '$fill_circle']);
  self.$require("canvas");
  window = $scope.get('Canvas').$init();
  return ($a = ($b = window).$mouse_move, $a.$$p = (TMP_1 = function(x, y){var self = TMP_1.$$s || this;
if (x == null) x = nil;if (y == null) y = nil;
  return window.$fill_circle(x, y, 15, "green")}, TMP_1.$$s = self, TMP_1.$$arity = 2, TMP_1), $a).call($b);
})(Opal);
